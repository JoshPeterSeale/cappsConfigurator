{"ast":null,"code":"var _jsxFileName = \"/Users/joshuaseale/Documents/development/cappsConfigurator/src/main/ui/src/components/configurator-form/NonInterchangeableConfiguratorForm.jsx\",\n  _s = $RefreshSig$();\nimport { Field, getFormValues, reduxForm, change } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport NonInterchangeableConfiguratorOutput from \"./NonInterchangeableConfiguratorOutput\";\nimport './NonInterchangeableConfiguratorForm.css';\nimport { gql, useQuery } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet GET_OPTIONS = gql`\nquery GetParameters {\n    getAccuracies{\n      accuracyCode\n      accuracyLabel\n    }\n    \n    getAccessories{\n      accessoryCode\n      accessoryLabel\n    }\n    \n    getBlockTypesA{\n      blockTypeCode\n      blockTypeLabel\n    }\n    \n    getBlockTypesB{\n      blockTypeCode\n      blockTypeLabel\n    }\n    \n    getMountTypes{\n      mountTypeCode\n      mountTypeLabel\n    }\n    \n    getPreloads {\n      preloadCode\n      preloadLabel\n      preloadCondition\n    }\n    \n    getSpecialTreatmentTypes{\n      treatmentCode\n      treatmentLabel\n    }\n  }\n`;\n/*\n{\n    \"data\": {\n        \"getAccuracies\": [\n            {\n                \"accuracyCode\": \"N\",\n                \"accuracyLabel\": \"Normal\",\n                \"__typename\": \"Accuracy\"\n            },\n            {\n                \"accuracyCode\": \"H\",\n                \"accuracyLabel\": \"Senior\",\n                \"__typename\": \"Accuracy\"\n            },\n            {\n                \"accuracyCode\": \"P\",\n                \"accuracyLabel\": \"Precision\",\n                \"__typename\": \"Accuracy\"\n            },\n            {\n                \"accuracyCode\": \"SP\",\n                \"accuracyLabel\": \"High Precision\",\n                \"__typename\": \"Accuracy\"\n            }\n        ],\n        \"getAccessories\": [\n            {\n                \"accessoryCode\": \"S\",\n                \"accessoryLabel\": null,\n                \"__typename\": \"Accessory\"\n            },\n            {\n                \"accessoryCode\": \"S\",\n                \"accessoryLabel\": null,\n                \"__typename\": \"Accessory\"\n            },\n            {\n                \"accessoryCode\": \"\",\n                \"accessoryLabel\": null,\n                \"__typename\": \"Accessory\"\n            }\n        ],\n        \"getBlockTypesA\": [\n            {\n                \"blockTypeCode\": \"H\",\n                \"blockTypeLabel\": \"High Profile\",\n                \"__typename\": \"BlockType\"\n            },\n            {\n                \"blockTypeCode\": \"S\",\n                \"blockTypeLabel\": \"Low Profile\",\n                \"__typename\": \"BlockType\"\n            }\n        ],\n        \"getBlockTypesB\": [\n            {\n                \"blockTypeCode\": \"A\",\n                \"blockTypeLabel\": \"Flange type\",\n                \"__typename\": \"BlockType\"\n            },\n            {\n                \"blockTypeCode\": \"B\",\n                \"blockTypeLabel\": \"Square block\",\n                \"__typename\": \"BlockType\"\n            },\n            {\n                \"blockTypeCode\": \"AL\",\n                \"blockTypeLabel\": \"Extended flange type\",\n                \"__typename\": \"BlockType\"\n            },\n            {\n                \"blockTypeCode\": \"BL\",\n                \"blockTypeLabel\": \"Extended square block\",\n                \"__typename\": \"BlockType\"\n            }\n        ],\n        \"getMountTypes\": [\n            {\n                \"mountTypeCode\": \"R\",\n                \"mountTypeLabel\": \"From above\",\n                \"__typename\": \"MountType\"\n            },\n            {\n                \"mountTypeCode\": \"K\",\n                \"mountTypeLabel\": \"From below\",\n                \"__typename\": \"MountType\"\n            }\n        ],\n        \"getPreloads\": [\n            {\n                \"preloadCode\": \"Z0\",\n                \"preloadLabel\": \"No preload\",\n                \"preloadCondition\": \"Fixed load direction with low impact and low precision\",\n                \"__typename\": \"Preload\"\n            },\n            {\n                \"preloadCode\": \"Z1\",\n                \"preloadLabel\": \"Middle preload\",\n                \"preloadCondition\": \"Light load and high precision\",\n                \"__typename\": \"Preload\"\n            },\n            {\n                \"preloadCode\": \"Z2\",\n                \"preloadLabel\": \"Heavy preload\",\n                \"preloadCondition\": \"Requirements for rigidity, vibration and impact\",\n                \"__typename\": \"Preload\"\n            }\n        ],\n        \"getSpecialTreatmentTypes\": [\n            {\n                \"treatmentCode\": \"E\",\n                \"treatmentLabel\": \"None: standard rail\",\n                \"__typename\": \"SpecialTreatment\"\n            }\n        ]\n    }\n}\n\n\n*/\n\nfunction NonInterchangeableConfiguratorForm() {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_OPTIONS);\n  if (data) {\n    let accuracies = data.getAccuracies;\n    let accuracyOptions = accuracies.map(accuracy => accuracy.accuracyLabel);\n    let accessories = data.getAccessories;\n    let accessoryOptions = accessories.map(accessory => accessory.accessoryLabel);\n    let blockTypesA = data.getBlockTypesA;\n    let blockTypeAOptions = blockTypesA.map(blockType => blockType.blockTypeLabel);\n    let blockTypesB = data.getBlockTypesB;\n    let blockTypeBOptions = blockTypesB.map(blockType => blockType.blockTypeLabel);\n    let mountTypes = data.getMountTypes;\n    let mountTypeOptions = mountTypes.map(mountType => mountType.mountTypeLabel);\n    let preloads = data.getPreloads;\n    let preloadOptions = preloads.map(preload => preloads.preloadLabel);\n    let preloadDescriptions = preloads.map(preload => preload.preloadCondition);\n    let specialTreatmentTypes = data.getSpecialTreatmentTypes;\n    let treatmentTypeOptions = specialTreatmentTypes.map(treatment => treatment.treatmentLabel);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [data && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"field-header\",\n              children: \" Block Type A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"block-type-a\",\n              component: \"select\",\n              label: \"block type A\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }, this), data.getBlockTypesA.map(blockType => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: blockType.blockTypeCode,\n                  children: [\" \", blockType.blockTypeLabel, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 44\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"index\",\n              children: \" 1 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"field-header\",\n              children: \" Dimensions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"dimensions\",\n              component: \"input\",\n              label: \"dimensions\",\n              placeholder: \"dimensions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"index\",\n              children: \" 2 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"field-header\",\n              children: \" Block Type B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"block-type-b\",\n              component: \"select\",\n              label: \"block type B\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 33\n              }, this), data.getBlockTypesB.map(blockType => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: blockType.blockTypeCode,\n                  children: [\" \", blockType.blockTypeLabel, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 44\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"index\",\n              children: \" 3 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"field-header\",\n              children: \" Number of Blocks Per Rail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"blocks-per-rail\",\n              component: \"input\",\n              label: \"blocks-per-rail\",\n              placeholder: \"blocks per rail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"index\",\n              children: \" 4 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"field-header\",\n              children: \" Mounting Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"mount-type\",\n              component: \"select\",\n              label: \"Mount Type\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 33\n              }, this), data.getMountTypes.map(mountType => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: mountType.mountTypeCode,\n                  children: [\" \", mountType.mountTypeLabel, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 44\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"index\",\n              children: \" 5 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"field-header\",\n              children: \" Length\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"length\",\n              component: \"input\",\n              label: \"length\",\n              placeholder: \"length (mm)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"index\",\n              children: \" 6 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"field-header\",\n              children: \" Special Treatment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"special-treatment-type\",\n              component: \"select\",\n              label: \"Special Treatment Type\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 33\n              }, this), data.getSpecialTreatmentTypes.map(treatment => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: treatment.treatmentCode,\n                  children: [\" \", treatment.treatmentLabel, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 44\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"index\",\n              children: \" 7 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"field-header\",\n              children: \" Acccessory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"accessory\",\n              component: \"select\",\n              label: \"Accessory\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 33\n              }, this), data.getAccessories.map(accessory => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: accessory.accessoryCode,\n                  children: [\" \", accessory.accessoryLabel, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 44\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"index\",\n              children: \" 8 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"field-header\",\n              children: \" Preload \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"preload\",\n              component: \"select\",\n              label: \"Preload\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 33\n              }, this), data.getPreloads.map(preload => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: preload.preloadCode,\n                  children: [\" \", preload.preloadLabel, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 44\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"index\",\n              children: \" 9 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"field-header\",\n              children: \" Accuracy Class\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"accuracy-class\",\n              component: \"select\",\n              label: \"accuracy-class\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 33\n              }, this), data.getAccuracies.map(accuracy => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: accuracy.accuracyCode,\n                  children: [\" \", accuracy.accuracyLabel, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 44\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"index\",\n              children: \" 10 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"field-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"field-header\",\n              children: \" Rails per Axis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"rails-per-axis\",\n              component: \"input\",\n              label: \"rails-per-axis\",\n              placeholder: \"rails per axis\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"index\",\n              children: \" 11 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field-submission\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \" Configure! \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-output\",\n        children: /*#__PURE__*/_jsxDEV(NonInterchangeableConfiguratorOutput, {\n          productCode: 'ABCDEFG'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Error \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 9\n  }, this);\n}\n_s(NonInterchangeableConfiguratorForm, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = NonInterchangeableConfiguratorForm;\nlet mapStateToProps = state => ({\n  configuratorProps: getFormValues('configurator')(state)\n});\nexport default reduxForm({\n  form: 'configurator',\n  destroyOnUnmount: false\n})(connect(mapStateToProps, {\n  change\n})(NonInterchangeableConfiguratorForm));\nvar _c;\n$RefreshReg$(_c, \"NonInterchangeableConfiguratorForm\");","map":{"version":3,"names":["Field","getFormValues","reduxForm","change","connect","NonInterchangeableConfiguratorOutput","gql","useQuery","jsxDEV","_jsxDEV","GET_OPTIONS","NonInterchangeableConfiguratorForm","_s","loading","error","data","accuracies","getAccuracies","accuracyOptions","map","accuracy","accuracyLabel","accessories","getAccessories","accessoryOptions","accessory","accessoryLabel","blockTypesA","getBlockTypesA","blockTypeAOptions","blockType","blockTypeLabel","blockTypesB","getBlockTypesB","blockTypeBOptions","mountTypes","getMountTypes","mountTypeOptions","mountType","mountTypeLabel","preloads","getPreloads","preloadOptions","preload","preloadLabel","preloadDescriptions","preloadCondition","specialTreatmentTypes","getSpecialTreatmentTypes","treatmentTypeOptions","treatment","treatmentLabel","children","className","fileName","_jsxFileName","lineNumber","columnNumber","name","component","label","value","blockTypeCode","placeholder","mountTypeCode","treatmentCode","accessoryCode","preloadCode","accuracyCode","type","productCode","_c","mapStateToProps","state","configuratorProps","form","destroyOnUnmount","$RefreshReg$"],"sources":["/Users/joshuaseale/Documents/development/cappsConfigurator/src/main/ui/src/components/configurator-form/NonInterchangeableConfiguratorForm.jsx"],"sourcesContent":["import { Field, getFormValues, reduxForm, change } from \"redux-form\"\nimport { connect } from \"react-redux\";\nimport NonInterchangeableConfiguratorOutput from \"./NonInterchangeableConfiguratorOutput\";\nimport './NonInterchangeableConfiguratorForm.css';\nimport { gql, useQuery } from \"@apollo/client\";\n\nlet GET_OPTIONS = gql`\nquery GetParameters {\n    getAccuracies{\n      accuracyCode\n      accuracyLabel\n    }\n    \n    getAccessories{\n      accessoryCode\n      accessoryLabel\n    }\n    \n    getBlockTypesA{\n      blockTypeCode\n      blockTypeLabel\n    }\n    \n    getBlockTypesB{\n      blockTypeCode\n      blockTypeLabel\n    }\n    \n    getMountTypes{\n      mountTypeCode\n      mountTypeLabel\n    }\n    \n    getPreloads {\n      preloadCode\n      preloadLabel\n      preloadCondition\n    }\n    \n    getSpecialTreatmentTypes{\n      treatmentCode\n      treatmentLabel\n    }\n  }\n`\n/*\n{\n    \"data\": {\n        \"getAccuracies\": [\n            {\n                \"accuracyCode\": \"N\",\n                \"accuracyLabel\": \"Normal\",\n                \"__typename\": \"Accuracy\"\n            },\n            {\n                \"accuracyCode\": \"H\",\n                \"accuracyLabel\": \"Senior\",\n                \"__typename\": \"Accuracy\"\n            },\n            {\n                \"accuracyCode\": \"P\",\n                \"accuracyLabel\": \"Precision\",\n                \"__typename\": \"Accuracy\"\n            },\n            {\n                \"accuracyCode\": \"SP\",\n                \"accuracyLabel\": \"High Precision\",\n                \"__typename\": \"Accuracy\"\n            }\n        ],\n        \"getAccessories\": [\n            {\n                \"accessoryCode\": \"S\",\n                \"accessoryLabel\": null,\n                \"__typename\": \"Accessory\"\n            },\n            {\n                \"accessoryCode\": \"S\",\n                \"accessoryLabel\": null,\n                \"__typename\": \"Accessory\"\n            },\n            {\n                \"accessoryCode\": \"\",\n                \"accessoryLabel\": null,\n                \"__typename\": \"Accessory\"\n            }\n        ],\n        \"getBlockTypesA\": [\n            {\n                \"blockTypeCode\": \"H\",\n                \"blockTypeLabel\": \"High Profile\",\n                \"__typename\": \"BlockType\"\n            },\n            {\n                \"blockTypeCode\": \"S\",\n                \"blockTypeLabel\": \"Low Profile\",\n                \"__typename\": \"BlockType\"\n            }\n        ],\n        \"getBlockTypesB\": [\n            {\n                \"blockTypeCode\": \"A\",\n                \"blockTypeLabel\": \"Flange type\",\n                \"__typename\": \"BlockType\"\n            },\n            {\n                \"blockTypeCode\": \"B\",\n                \"blockTypeLabel\": \"Square block\",\n                \"__typename\": \"BlockType\"\n            },\n            {\n                \"blockTypeCode\": \"AL\",\n                \"blockTypeLabel\": \"Extended flange type\",\n                \"__typename\": \"BlockType\"\n            },\n            {\n                \"blockTypeCode\": \"BL\",\n                \"blockTypeLabel\": \"Extended square block\",\n                \"__typename\": \"BlockType\"\n            }\n        ],\n        \"getMountTypes\": [\n            {\n                \"mountTypeCode\": \"R\",\n                \"mountTypeLabel\": \"From above\",\n                \"__typename\": \"MountType\"\n            },\n            {\n                \"mountTypeCode\": \"K\",\n                \"mountTypeLabel\": \"From below\",\n                \"__typename\": \"MountType\"\n            }\n        ],\n        \"getPreloads\": [\n            {\n                \"preloadCode\": \"Z0\",\n                \"preloadLabel\": \"No preload\",\n                \"preloadCondition\": \"Fixed load direction with low impact and low precision\",\n                \"__typename\": \"Preload\"\n            },\n            {\n                \"preloadCode\": \"Z1\",\n                \"preloadLabel\": \"Middle preload\",\n                \"preloadCondition\": \"Light load and high precision\",\n                \"__typename\": \"Preload\"\n            },\n            {\n                \"preloadCode\": \"Z2\",\n                \"preloadLabel\": \"Heavy preload\",\n                \"preloadCondition\": \"Requirements for rigidity, vibration and impact\",\n                \"__typename\": \"Preload\"\n            }\n        ],\n        \"getSpecialTreatmentTypes\": [\n            {\n                \"treatmentCode\": \"E\",\n                \"treatmentLabel\": \"None: standard rail\",\n                \"__typename\": \"SpecialTreatment\"\n            }\n        ]\n    }\n}\n\n\n*/\n\nfunction NonInterchangeableConfiguratorForm() {\n\n    const { loading, error, data } = useQuery(GET_OPTIONS);\n    \n\n    if (data) {\n        let accuracies = data.getAccuracies;\n        let accuracyOptions = accuracies.map(accuracy => accuracy.accuracyLabel);\n\n        let accessories = data.getAccessories;\n        let accessoryOptions = accessories.map(accessory => accessory.accessoryLabel);\n\n        let blockTypesA = data.getBlockTypesA;\n        let blockTypeAOptions = blockTypesA.map(blockType => blockType.blockTypeLabel);\n\n        let blockTypesB = data.getBlockTypesB;\n        let blockTypeBOptions = blockTypesB.map(blockType => blockType.blockTypeLabel);\n\n        let mountTypes = data.getMountTypes;\n        let mountTypeOptions = mountTypes.map(mountType => mountType.mountTypeLabel);\n\n        let preloads = data.getPreloads;\n        let preloadOptions = preloads.map(preload => preloads.preloadLabel);\n        let preloadDescriptions = preloads.map(preload => preload.preloadCondition);\n\n        let specialTreatmentTypes = data.getSpecialTreatmentTypes;\n        let treatmentTypeOptions = specialTreatmentTypes.map(treatment => treatment.treatmentLabel);\n    }\n\n    return(\n        <div>\n            {data &&\n            <div>\n                <form>\n                    <div className=\"form-container\">\n                        <div className=\"field-item\">\n                            <p className=\"field-header\"> Block Type A</p>\n                            <Field\n                            name='block-type-a'\n                            component='select'\n                            label='block type A'\n                            >\n                                <option></option>\n                                {data.getBlockTypesA.map(blockType => {\n                                    return(<option value={blockType.blockTypeCode}> {blockType.blockTypeLabel} </option>);\n                                })}\n                            </Field>\n                            <p className=\"index\"> 1 </p>\n                        </div>\n                        \n                        <div className=\"field-item\">\n                            <p className=\"field-header\"> Dimensions</p>\n                            <Field \n                            name='dimensions'\n                            component='input'\n                            label='dimensions'\n                            placeholder='dimensions'\n                            />\n                            <p className=\"index\"> 2 </p>\n                        </div>\n                        <div className=\"field-item\">\n                            <p className=\"field-header\"> Block Type B</p>\n                            <Field\n                            name='block-type-b'\n                            component='select'\n                            label='block type B'\n                            >\n                                <option></option>\n                                {data.getBlockTypesB.map(blockType => {\n                                    return(<option value={blockType.blockTypeCode}> {blockType.blockTypeLabel} </option>);\n                                })}\n                            </Field>\n                            <p className=\"index\"> 3 </p>\n                        </div>\n                        <div className=\"field-item\">\n                            <p className=\"field-header\"> Number of Blocks Per Rail</p>\n                            <Field \n                            name='blocks-per-rail'\n                            component='input'\n                            label='blocks-per-rail'\n                            placeholder='blocks per rail'\n                            />\n                            <p className=\"index\"> 4 </p>\n                        </div> \n                        <div className=\"field-item\">\n                            <p className=\"field-header\"> Mounting Type</p>\n                            <Field\n                            name='mount-type'\n                            component='select'\n                            label='Mount Type'\n                            >\n                                <option></option>\n                                {data.getMountTypes.map(mountType => {\n                                    return(<option value={mountType.mountTypeCode}> {mountType.mountTypeLabel} </option>);\n                                })}\n                            </Field>\n                            <p className=\"index\"> 5 </p>\n                        </div>\n                        <div className=\"field-item\">\n                            <p className=\"field-header\"> Length</p>\n                            <Field\n                            name='length'\n                            component='input'\n                            label='length'\n                            placeholder='length (mm)'\n                            />\n                            <p className=\"index\"> 6 </p>\n                        </div>\n                        <div className=\"field-item\">\n                        <p className=\"field-header\"> Special Treatment</p>\n                        <Field\n                            name='special-treatment-type'\n                            component='select'\n                            label='Special Treatment Type'\n                            >\n                                <option></option>\n                                {data.getSpecialTreatmentTypes.map(treatment => {\n                                    return(<option value={treatment.treatmentCode}> {treatment.treatmentLabel} </option>);\n                                })}\n                            </Field>\n                            <p className=\"index\"> 7 </p>\n                        </div>\n                        <div className=\"field-item\">\n                            <p className=\"field-header\"> Acccessory</p>    \n                            <Field\n                            name='accessory'\n                            component='select'\n                            label='Accessory'\n                            >\n                                <option></option>\n                                {data.getAccessories.map(accessory => {\n                                    return(<option value={accessory.accessoryCode}> {accessory.accessoryLabel} </option>);\n                                })}\n                            </Field>\n                            <p className=\"index\"> 8 </p>\n                        </div>\n                        <div className=\"field-item\">\n                            <p className=\"field-header\"> Preload </p>\n                            <Field\n                            name='preload'\n                            component='select'\n                            label='Preload'\n                            >\n                                <option></option>\n                                {data.getPreloads.map(preload => {\n                                    return(<option value={preload.preloadCode}> {preload.preloadLabel} </option>);\n                                })}\n                            </Field>\n                            <p className=\"index\"> 9 </p>\n                        </div>\n                        <div className=\"field-item\">\n                            <p className=\"field-header\"> Accuracy Class</p>\n                            <Field\n                            name='accuracy-class'\n                            component='select'\n                            label='accuracy-class'\n                            >\n                                <option></option>\n                                {data.getAccuracies.map(accuracy => {\n                                    return(<option value={accuracy.accuracyCode}> {accuracy.accuracyLabel} </option>);\n                                })}\n                            </Field>\n                            <p className=\"index\"> 10 </p>\n                        </div>\n                        <div className=\"field-item\">\n                            <p className=\"field-header\"> Rails per Axis</p>\n                            <Field\n                            name='rails-per-axis'\n                            component='input'\n                            label='rails-per-axis'\n                            placeholder='rails per axis'\n                            />\n                            <p className=\"index\"> 11 </p>\n                        </div>\n                    </div>\n                    <div className=\"field-submission\"> \n                        <button type=\"submit\"> Configure! </button>\n                    </div>\n                </form>\n                <div className=\"form-output\">\n                    <NonInterchangeableConfiguratorOutput productCode={'ABCDEFG'} />\n                </div>\n            </div>}\n            {loading && \n            <div> \n                <p> Loading</p>\n            </div>}\n            {error &&\n            <div>\n                <p> Error </p>\n            </div>}\n        </div>\n    );\n}\n\nlet mapStateToProps = state => ({\n    configuratorProps: getFormValues('configurator')(state),  \n});\n\nexport default reduxForm({\n    form: 'configurator',\n    destroyOnUnmount: false\n})(connect(mapStateToProps, {change})(NonInterchangeableConfiguratorForm))"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,aAAa,EAAEC,SAAS,EAAEC,MAAM,QAAQ,YAAY;AACpE,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,oCAAoC,MAAM,wCAAwC;AACzF,OAAO,0CAA0C;AACjD,SAASC,GAAG,EAAEC,QAAQ,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,IAAIC,WAAW,GAAGJ,GAAI;AACtkCAAkCA,CAAA,EAAG;EAAAC,EAAA;EAE1C,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGR,QAAQ,CAACG,WAAW,CAAC;EAGtD,IAAIK,IAAI,EAAE;IACN,IAAIC,UAAU,GAAGD,IAAI,CAACE,aAAa;IACnC,IAAIC,eAAe,GAAGF,UAAU,CAACG,GAAG,CAACC,QAAQ,IAAIA,QAAQ,CAACC,aAAa,CAAC;IAExE,IAAIC,WAAW,GAAGP,IAAI,CAACQ,cAAc;IACrC,IAAIC,gBAAgB,GAAGF,WAAW,CAACH,GAAG,CAACM,SAAS,IAAIA,SAAS,CAACC,cAAc,CAAC;IAE7E,IAAIC,WAAW,GAAGZ,IAAI,CAACa,cAAc;IACrC,IAAIC,iBAAiB,GAAGF,WAAW,CAACR,GAAG,CAACW,SAAS,IAAIA,SAAS,CAACC,cAAc,CAAC;IAE9E,IAAIC,WAAW,GAAGjB,IAAI,CAACkB,cAAc;IACrC,IAAIC,iBAAiB,GAAGF,WAAW,CAACb,GAAG,CAACW,SAAS,IAAIA,SAAS,CAACC,cAAc,CAAC;IAE9E,IAAII,UAAU,GAAGpB,IAAI,CAACqB,aAAa;IACnC,IAAIC,gBAAgB,GAAGF,UAAU,CAAChB,GAAG,CAACmB,SAAS,IAAIA,SAAS,CAACC,cAAc,CAAC;IAE5E,IAAIC,QAAQ,GAAGzB,IAAI,CAAC0B,WAAW;IAC/B,IAAIC,cAAc,GAAGF,QAAQ,CAACrB,GAAG,CAACwB,OAAO,IAAIH,QAAQ,CAACI,YAAY,CAAC;IACnE,IAAIC,mBAAmB,GAAGL,QAAQ,CAACrB,GAAG,CAACwB,OAAO,IAAIA,OAAO,CAACG,gBAAgB,CAAC;IAE3E,IAAIC,qBAAqB,GAAGhC,IAAI,CAACiC,wBAAwB;IACzD,IAAIC,oBAAoB,GAAGF,qBAAqB,CAAC5B,GAAG,CAAC+B,SAAS,IAAIA,SAAS,CAACC,cAAc,CAAC;EAC/F;EAEA,oBACI1C,OAAA;IAAA2C,QAAA,GACKrC,IAAI,iBACLN,OAAA;MAAA2C,QAAA,gBACI3C,OAAA;QAAA2C,QAAA,gBACI3C,OAAA;UAAK4C,SAAS,EAAC,gBAAgB;UAAAD,QAAA,gBAC3B3C,OAAA;YAAK4C,SAAS,EAAC,YAAY;YAAAD,QAAA,gBACvB3C,OAAA;cAAG4C,SAAS,EAAC,cAAc;cAAAD,QAAA,EAAC;YAAa;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAC7ChD,OAAA,CAACT,KAAK;cACN0D,IAAI,EAAC,cAAc;cACnBC,SAAS,EAAC,QAAQ;cAClBC,KAAK,EAAC,cAAc;cAAAR,QAAA,gBAEhB3C,OAAA;gBAAA6C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAgB,CAAC,EAChB1C,IAAI,CAACa,cAAc,CAACT,GAAG,CAACW,SAAS,IAAI;gBAClC,oBAAOrB,OAAA;kBAAQoD,KAAK,EAAE/B,SAAS,CAACgC,aAAc;kBAAAV,QAAA,GAAC,GAAC,EAACtB,SAAS,CAACC,cAAc,EAAC,GAAC;gBAAA;kBAAAuB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cACxF,CAAC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACRhD,OAAA;cAAG4C,SAAS,EAAC,OAAO;cAAAD,QAAA,EAAC;YAAG;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC,eAENhD,OAAA;YAAK4C,SAAS,EAAC,YAAY;YAAAD,QAAA,gBACvB3C,OAAA;cAAG4C,SAAS,EAAC,cAAc;cAAAD,QAAA,EAAC;YAAW;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAC3ChD,OAAA,CAACT,KAAK;cACN0D,IAAI,EAAC,YAAY;cACjBC,SAAS,EAAC,OAAO;cACjBC,KAAK,EAAC,YAAY;cAClBG,WAAW,EAAC;YAAY;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB,CAAC,eACFhD,OAAA;cAAG4C,SAAS,EAAC,OAAO;cAAAD,QAAA,EAAC;YAAG;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC,eACNhD,OAAA;YAAK4C,SAAS,EAAC,YAAY;YAAAD,QAAA,gBACvB3C,OAAA;cAAG4C,SAAS,EAAC,cAAc;cAAAD,QAAA,EAAC;YAAa;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAC7ChD,OAAA,CAACT,KAAK;cACN0D,IAAI,EAAC,cAAc;cACnBC,SAAS,EAAC,QAAQ;cAClBC,KAAK,EAAC,cAAc;cAAAR,QAAA,gBAEhB3C,OAAA;gBAAA6C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAgB,CAAC,EAChB1C,IAAI,CAACkB,cAAc,CAACd,GAAG,CAACW,SAAS,IAAI;gBAClC,oBAAOrB,OAAA;kBAAQoD,KAAK,EAAE/B,SAAS,CAACgC,aAAc;kBAAAV,QAAA,GAAC,GAAC,EAACtB,SAAS,CAACC,cAAc,EAAC,GAAC;gBAAA;kBAAAuB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cACxF,CAAC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACRhD,OAAA;cAAG4C,SAAS,EAAC,OAAO;cAAAD,QAAA,EAAC;YAAG;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC,eACNhD,OAAA;YAAK4C,SAAS,EAAC,YAAY;YAAAD,QAAA,gBACvB3C,OAAA;cAAG4C,SAAS,EAAC,cAAc;cAAAD,QAAA,EAAC;YAA0B;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAC1DhD,OAAA,CAACT,KAAK;cACN0D,IAAI,EAAC,iBAAiB;cACtBC,SAAS,EAAC,OAAO;cACjBC,KAAK,EAAC,iBAAiB;cACvBG,WAAW,EAAC;YAAiB;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B,CAAC,eACFhD,OAAA;cAAG4C,SAAS,EAAC,OAAO;cAAAD,QAAA,EAAC;YAAG;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC,eACNhD,OAAA;YAAK4C,SAAS,EAAC,YAAY;YAAAD,QAAA,gBACvB3C,OAAA;cAAG4C,SAAS,EAAC,cAAc;cAAAD,QAAA,EAAC;YAAc;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAC9ChD,OAAA,CAACT,KAAK;cACN0D,IAAI,EAAC,YAAY;cACjBC,SAAS,EAAC,QAAQ;cAClBC,KAAK,EAAC,YAAY;cAAAR,QAAA,gBAEd3C,OAAA;gBAAA6C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAgB,CAAC,EAChB1C,IAAI,CAACqB,aAAa,CAACjB,GAAG,CAACmB,SAAS,IAAI;gBACjC,oBAAO7B,OAAA;kBAAQoD,KAAK,EAAEvB,SAAS,CAAC0B,aAAc;kBAAAZ,QAAA,GAAC,GAAC,EAACd,SAAS,CAACC,cAAc,EAAC,GAAC;gBAAA;kBAAAe,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cACxF,CAAC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACRhD,OAAA;cAAG4C,SAAS,EAAC,OAAO;cAAAD,QAAA,EAAC;YAAG;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC,eACNhD,OAAA;YAAK4C,SAAS,EAAC,YAAY;YAAAD,QAAA,gBACvB3C,OAAA;cAAG4C,SAAS,EAAC,cAAc;cAAAD,QAAA,EAAC;YAAO;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACvChD,OAAA,CAACT,KAAK;cACN0D,IAAI,EAAC,QAAQ;cACbC,SAAS,EAAC,OAAO;cACjBC,KAAK,EAAC,QAAQ;cACdG,WAAW,EAAC;YAAa;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxB,CAAC,eACFhD,OAAA;cAAG4C,SAAS,EAAC,OAAO;cAAAD,QAAA,EAAC;YAAG;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC,eACNhD,OAAA;YAAK4C,SAAS,EAAC,YAAY;YAAAD,QAAA,gBAC3B3C,OAAA;cAAG4C,SAAS,EAAC,cAAc;cAAAD,QAAA,EAAC;YAAkB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAClDhD,OAAA,CAACT,KAAK;cACF0D,IAAI,EAAC,wBAAwB;cAC7BC,SAAS,EAAC,QAAQ;cAClBC,KAAK,EAAC,wBAAwB;cAAAR,QAAA,gBAE1B3C,OAAA;gBAAA6C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAgB,CAAC,EAChB1C,IAAI,CAACiC,wBAAwB,CAAC7B,GAAG,CAAC+B,SAAS,IAAI;gBAC5C,oBAAOzC,OAAA;kBAAQoD,KAAK,EAAEX,SAAS,CAACe,aAAc;kBAAAb,QAAA,GAAC,GAAC,EAACF,SAAS,CAACC,cAAc,EAAC,GAAC;gBAAA;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cACxF,CAAC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACRhD,OAAA;cAAG4C,SAAS,EAAC,OAAO;cAAAD,QAAA,EAAC;YAAG;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC,eACNhD,OAAA;YAAK4C,SAAS,EAAC,YAAY;YAAAD,QAAA,gBACvB3C,OAAA;cAAG4C,SAAS,EAAC,cAAc;cAAAD,QAAA,EAAC;YAAW;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAC3ChD,OAAA,CAACT,KAAK;cACN0D,IAAI,EAAC,WAAW;cAChBC,SAAS,EAAC,QAAQ;cAClBC,KAAK,EAAC,WAAW;cAAAR,QAAA,gBAEb3C,OAAA;gBAAA6C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAgB,CAAC,EAChB1C,IAAI,CAACQ,cAAc,CAACJ,GAAG,CAACM,SAAS,IAAI;gBAClC,oBAAOhB,OAAA;kBAAQoD,KAAK,EAAEpC,SAAS,CAACyC,aAAc;kBAAAd,QAAA,GAAC,GAAC,EAAC3B,SAAS,CAACC,cAAc,EAAC,GAAC;gBAAA;kBAAA4B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cACxF,CAAC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACRhD,OAAA;cAAG4C,SAAS,EAAC,OAAO;cAAAD,QAAA,EAAC;YAAG;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC,eACNhD,OAAA;YAAK4C,SAAS,EAAC,YAAY;YAAAD,QAAA,gBACvB3C,OAAA;cAAG4C,SAAS,EAAC,cAAc;cAAAD,QAAA,EAAC;YAAS;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eACzChD,OAAA,CAACT,KAAK;cACN0D,IAAI,EAAC,SAAS;cACdC,SAAS,EAAC,QAAQ;cAClBC,KAAK,EAAC,SAAS;cAAAR,QAAA,gBAEX3C,OAAA;gBAAA6C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAgB,CAAC,EAChB1C,IAAI,CAAC0B,WAAW,CAACtB,GAAG,CAACwB,OAAO,IAAI;gBAC7B,oBAAOlC,OAAA;kBAAQoD,KAAK,EAAElB,OAAO,CAACwB,WAAY;kBAAAf,QAAA,GAAC,GAAC,EAACT,OAAO,CAACC,YAAY,EAAC,GAAC;gBAAA;kBAAAU,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAChF,CAAC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACRhD,OAAA;cAAG4C,SAAS,EAAC,OAAO;cAAAD,QAAA,EAAC;YAAG;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC,eACNhD,OAAA;YAAK4C,SAAS,EAAC,YAAY;YAAAD,QAAA,gBACvB3C,OAAA;cAAG4C,SAAS,EAAC,cAAc;cAAAD,QAAA,EAAC;YAAe;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAC/ChD,OAAA,CAACT,KAAK;cACN0D,IAAI,EAAC,gBAAgB;cACrBC,SAAS,EAAC,QAAQ;cAClBC,KAAK,EAAC,gBAAgB;cAAAR,QAAA,gBAElB3C,OAAA;gBAAA6C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAgB,CAAC,EAChB1C,IAAI,CAACE,aAAa,CAACE,GAAG,CAACC,QAAQ,IAAI;gBAChC,oBAAOX,OAAA;kBAAQoD,KAAK,EAAEzC,QAAQ,CAACgD,YAAa;kBAAAhB,QAAA,GAAC,GAAC,EAAChC,QAAQ,CAACC,aAAa,EAAC,GAAC;gBAAA;kBAAAiC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cACpF,CAAC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACRhD,OAAA;cAAG4C,SAAS,EAAC,OAAO;cAAAD,QAAA,EAAC;YAAI;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC,eACNhD,OAAA;YAAK4C,SAAS,EAAC,YAAY;YAAAD,QAAA,gBACvB3C,OAAA;cAAG4C,SAAS,EAAC,cAAc;cAAAD,QAAA,EAAC;YAAe;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAC/ChD,OAAA,CAACT,KAAK;cACN0D,IAAI,EAAC,gBAAgB;cACrBC,SAAS,EAAC,OAAO;cACjBC,KAAK,EAAC,gBAAgB;cACtBG,WAAW,EAAC;YAAgB;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3B,CAAC,eACFhD,OAAA;cAAG4C,SAAS,EAAC,OAAO;cAAAD,QAAA,EAAC;YAAI;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACNhD,OAAA;UAAK4C,SAAS,EAAC,kBAAkB;UAAAD,QAAA,eAC7B3C,OAAA;YAAQ4D,IAAI,EAAC,QAAQ;YAAAjB,QAAA,EAAC;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACPhD,OAAA;QAAK4C,SAAS,EAAC,aAAa;QAAAD,QAAA,eACxB3C,OAAA,CAACJ,oCAAoC;UAACiE,WAAW,EAAE;QAAU;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EACL5C,OAAO,iBACRJ,OAAA;MAAA2C,QAAA,eACI3C,OAAA;QAAA2C,QAAA,EAAG;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC,EACL3C,KAAK,iBACNL,OAAA;MAAA2C,QAAA,eACI3C,OAAA;QAAA2C,QAAA,EAAG;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC7C,EAAA,CAjMQD,kCAAkC;EAAA,QAENJ,QAAQ;AAAA;AAAAgE,EAAA,GAFpC5D,kCAAkC;AAmM3C,IAAI6D,eAAe,GAAGC,KAAK,KAAK;EAC5BC,iBAAiB,EAAEzE,aAAa,CAAC,cAAc,CAAC,CAACwE,KAAK;AAC1D,CAAC,CAAC;AAEF,eAAevE,SAAS,CAAC;EACrByE,IAAI,EAAE,cAAc;EACpBC,gBAAgB,EAAE;AACtB,CAAC,CAAC,CAACxE,OAAO,CAACoE,eAAe,EAAE;EAACrE;AAAM,CAAC,CAAC,CAACQ,kCAAkC,CAAC,CAAC;AAAA,IAAA4D,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}