{"ast":null,"code":"var _jsxFileName = \"/Users/joshuaseale/Documents/development/cappsConfigurator/src/main/ui/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { reducer as formReducer } from 'redux-form';\nimport { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { ApolloClient, InMemoryCache, createHttpLink, ApolloProvider, gql, from } from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reducers = {\n  form: formReducer\n};\nconst reducer = combineReducers(reducers);\nconst store = configureStore({\n  reducer: reducer\n});\nconst errorLink = onError(_ref => {\n  let {\n    graphqlErrors,\n    networkErrors\n  } = _ref;\n  if (graphqlErrors) {\n    graphqlErrors.map(_ref2 => {\n      let {\n        message,\n        location,\n        path\n      } = _ref2;\n      alert(`Graphql error ${message}`);\n    });\n  }\n});\nconst link = from([errorLink, createHttpLink({\n  uri: \"http://localhost:8080/graphql\",\n  headers: {\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': 'http://localhost:8080/graphql'\n  },\n  fetch\n})]);\nconst client = new ApolloClient({\n  link: link,\n  cache: new InMemoryCache()\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(ApolloProvider, {\n      client: client,\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 44,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","Provider","reducer","formReducer","combineReducers","configureStore","ApolloClient","InMemoryCache","createHttpLink","ApolloProvider","gql","from","onError","jsxDEV","_jsxDEV","reducers","form","store","errorLink","_ref","graphqlErrors","networkErrors","map","_ref2","message","location","path","alert","link","uri","headers","fetch","client","cache","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/joshuaseale/Documents/development/cappsConfigurator/src/main/ui/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport {Provider}  from 'react-redux';\nimport { reducer as formReducer } from 'redux-form'\nimport { combineReducers } from 'redux'\nimport { configureStore } from '@reduxjs/toolkit';\nimport { ApolloClient, InMemoryCache, createHttpLink,  ApolloProvider, gql, from } from \"@apollo/client\";\nimport {onError} from \"@apollo/client/link/error\";\n\nconst reducers = {\n  form: formReducer\n}\nconst reducer = combineReducers(reducers)\nconst store = configureStore({reducer: reducer})\n\nconst errorLink = onError(({graphqlErrors, networkErrors}) => {\n  if(graphqlErrors) {\n    graphqlErrors.map(({message, location, path}) => {\n      alert(`Graphql error ${message}`);\n    });\n  }\n});\n\nconst link = from([\n  errorLink,\n  createHttpLink({\n    uri: \"http://localhost:8080/graphql\",\n    headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': 'http://localhost:8080/graphql',\n    },\n    fetch,\n  })\n])\n\nconst client = new ApolloClient({\n  link: link,\n  cache: new InMemoryCache()\n});\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ApolloProvider client={client}>\n        <App />\n      </ApolloProvider>\n    </Provider>\n  </React.StrictMode>\n);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,GAAG,MAAM,OAAO;AACvB,SAAQC,QAAQ,QAAQ,aAAa;AACrC,SAASC,OAAO,IAAIC,WAAW,QAAQ,YAAY;AACnD,SAASC,eAAe,QAAQ,OAAO;AACvC,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,YAAY,EAAEC,aAAa,EAAEC,cAAc,EAAGC,cAAc,EAAEC,GAAG,EAAEC,IAAI,QAAQ,gBAAgB;AACxG,SAAQC,OAAO,QAAO,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,QAAQ,GAAG;EACfC,IAAI,EAAEb;AACR,CAAC;AACD,MAAMD,OAAO,GAAGE,eAAe,CAACW,QAAQ,CAAC;AACzC,MAAME,KAAK,GAAGZ,cAAc,CAAC;EAACH,OAAO,EAAEA;AAAO,CAAC,CAAC;AAEhD,MAAMgB,SAAS,GAAGN,OAAO,CAACO,IAAA,IAAoC;EAAA,IAAnC;IAACC,aAAa;IAAEC;EAAa,CAAC,GAAAF,IAAA;EACvD,IAAGC,aAAa,EAAE;IAChBA,aAAa,CAACE,GAAG,CAACC,KAAA,IAA+B;MAAA,IAA9B;QAACC,OAAO;QAAEC,QAAQ;QAAEC;MAAI,CAAC,GAAAH,KAAA;MAC1CI,KAAK,CAAE,iBAAgBH,OAAQ,EAAC,CAAC;IACnC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,MAAMI,IAAI,GAAGjB,IAAI,CAAC,CAChBO,SAAS,EACTV,cAAc,CAAC;EACbqB,GAAG,EAAE,+BAA+B;EACpCC,OAAO,EAAE;IACL,cAAc,EAAE,kBAAkB;IAClC,6BAA6B,EAAE;EACnC,CAAC;EACDC;AACF,CAAC,CAAC,CACH,CAAC;AAEF,MAAMC,MAAM,GAAG,IAAI1B,YAAY,CAAC;EAC9BsB,IAAI,EAAEA,IAAI;EACVK,KAAK,EAAE,IAAI1B,aAAa,CAAC;AAC3B,CAAC,CAAC;AAEF,MAAM2B,IAAI,GAAGnC,QAAQ,CAACoC,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTxB,OAAA,CAAChB,KAAK,CAACyC,UAAU;EAAAC,QAAA,eACf1B,OAAA,CAACb,QAAQ;IAACgB,KAAK,EAAEA,KAAM;IAAAuB,QAAA,eACrB1B,OAAA,CAACL,cAAc;MAACuB,MAAM,EAAEA,MAAO;MAAAQ,QAAA,eAC7B1B,OAAA,CAACd,GAAG;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACK,CACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}